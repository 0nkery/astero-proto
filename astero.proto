syntax = "proto2";

package astero;


// Helper structs.

message Coord {
    required float x = 1;
    required float y = 2;
}

message Body {
    required Coord pos = 1;
    required Coord vel = 2;
    optional float rot = 3;
    optional float rvel = 4;
    optional float size = 5;
}

message Asteroid {
    required uint32 id = 1;
    required Body body = 2;
    optional float life = 3;
}

message Shot {
    required Body body = 1;
    required float ttl = 2;
}

// Data about joined player (from server).
message Player {
    required uint32 id = 1;
    required Body body = 2;
    optional string nickname = 3;
    optional float life = 4;
    optional uint32 last_handled_input = 5;
    optional bool shot_confirmed = 6;
}

// Actual messages.

message Create {
    oneof entity {
        Player player = 1;
        Asteroid asteroid = 2;
        Shot shot = 3;
    }
}

message Destroy {
    required uint32 id = 1;
}

message Update {
    oneof entity {
        Player player = 1;
        Asteroid asteroid = 2;
    }
}

message UpdateList {
    required uint64 timestamp = 1;
    map<uint32, Update> updates = 2;
}

message JoinPayload {
    required string nickname = 1;
}

message Input {
    required uint32 sequence_num = 1;
    optional sint32 turn = 2;
    optional sint32 accel = 3;
    optional bool fire = 4;
    optional Body body_then = 5;
}


// Wrappers.

message Client {
    oneof msg {
        Input input = 1;
    }
}

message Server {
    oneof msg {
        Create create = 1;
        Destroy destroy = 2;
        UpdateList list = 3;
    }
}
