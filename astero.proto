syntax = "proto2";

package astero;

// Helper structs (not messages)

message Coord {
    required float x = 1;
    required float y = 2;
}

message Body {
    required Coord pos = 1;
    required Coord vel = 2;
    optional float rot = 3;
    optional float rvel = 4;
    optional float size = 5;
}

message Asteroid {
    required Body body = 1;
    required float life = 2;
}

message Asteroids {
    map<uint32, Asteroid> entities = 1;
}

enum Entity {
    UNKNOWN_ENTITY = 0;
    ASTEROID = 1;
}

message SimUpdate {
    required Entity entity = 1;
    required uint32 id = 2;
    required Body body = 3;
}

// Actual messages

message Join {
    required string nickname = 1;
}

message JoinAck {
    required uint32 id = 1;
    required Body body = 2;
}

message OtherJoined {
    required uint32 id = 1;
    required string nickname = 2;
    required Body body = 3;
}


message Leave {}

message OtherLeft {
    required uint32 id = 1;
}


message Heartbeat {}


message Spawn {
    oneof entity {
        Asteroids asteroids = 1;
    }
}

message SimUpdates {
    repeated SimUpdate updates = 1;
}

message Input {
    optional sint32 turn = 1;
}

message OtherInput {
    required uint32 id = 1;
    required Input input = 2;
}


// Message wrapper

message Client {
    oneof msg {
        Join join = 1;
        Leave leave = 2;
        Heartbeat heartbeat = 3;
        Input input = 4;
    }
}

message Server {
    oneof msg {
        JoinAck join_ack = 1;
        OtherJoined other_joined = 2;
        OtherLeft other_left = 3;
        Heartbeat heartbeat = 4;
        Spawn spawn = 5;
        SimUpdates sim_updates = 6;
        OtherInput other_input = 7;
    }
}
