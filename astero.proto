syntax = "proto2";

package astero;


// Helper structs.

message Coord {
    required float x = 1;
    required float y = 2;
}

message Body {
    required Coord pos = 1;
    required Coord vel = 2;
    optional float rot = 3;
    optional float rvel = 4;
    optional float size = 5;
}

message Asteroid {
    required uint32 id = 1;
    required Body body = 2;
    optional float life = 3;
}

message Shot {
    required Body body = 1;
    required float ttl = 2;
}

// Data about joined player (from server).
message Player {
    required uint32 id = 1;
    required Body body = 2;
    optional string nickname = 3;
    optional float life = 4;
}

// Actual messages.

message Create {
    oneof Entity {
        Player player = 1;
        Asteroid asteroid = 2;
        Shot shot = 3;
    }
}

enum Entity {
    UNKNOWN_ENTITY = 0;
    ASTEROID = 1;
    PLAYER = 2;
}

message Destroy {
    required uint32 id = 1;
    required Entity entity = 2;
}

message Update {
    oneof Entity {
        Player player = 1;
        Asteroid asteroid = 2;
    }
}

message ManyUpdates {
    repeated Update updates = 1;
}

message JoinPayload {
    required string nickname = 1;
}

message Input {
    optional sint32 turn = 1;
    optional sint32 accel = 2;
    optional bool fire = 3;
}


// Wrappers.

message Client {
    oneof Msg {
        Input input = 1;
    }
}

message Server {
    oneof Msg {
        Create create = 1;
        Destroy destroy = 2;
        ManyUpdates updates = 3;
    }
}
